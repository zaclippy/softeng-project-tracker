import sqlite3
from databaseManipulator import *
################################################################################################################################################################################################################################################
##################################### INSERT SCRIPT ############################################################################################################################################################################################
################################################################################################################################################################################################################################################

# amazing test data
def insert_test_data():
    # Create a table for storing data
    print("Table created successfully")
    print("Inserting manager values...")

    add_project_manager_specified_id(0, 'Gibby', 'Grindelwald', 'BigMan@warwick.co.uk','423424244', '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')
    add_project_manager_specified_id(1, 'Jeremy', 'Kyle', 'LeJeremy@warwick.co.uk','228883893', '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')
    add_project_manager_specified_id(2, 'Justin', 'Chadzinski', 'LeChad@warwick.co.uk','1100202020', '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')
    add_project_manager('Adam', 'Gibbons', 'Adam@warwick.ac.uk', '67867878932', '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')

    print("Inserting projects...")

    insert_new_project_specified_id(0, 0, 'CTextEditor', '2024-02-10', 20000, 'Charis', 'Editor in C', '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')
    insert_new_project_specified_id(0, 1, 'C-code-optimisation', '2027-12-01', 10000, 'CS257 Students', 'Optimise Code', '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')
    insert_new_project_specified_id(2, 2, 'testDev', '2023-11-07', 1000000, 'University of Warwick', 'Solve P VS NP', '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')
    insert_new_project_specified_id(999, 999, 'UNASSIGNED EMPLOYEE', '9999-01-01', 999999999, 'PLACEHOLDER', 'PLACEHOLDER', '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')
    insert_new_project_with_estimate(999, '2023-11-07', 'University of Warwick', 'Software', 100, 2000, 100000, 1000, 1, 2, 3, 4, 5, 4, 3, 100, 100)
    insert_new_project_specified_id(0, 3, 'A-star-greedy-BFS-Dijkstra-maze-solver', '2030-02-10', 35000, 'James', 'A* maze Solver', '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', 'make it interactive')

    print("Inserting team members...")

    add_employee('Robert Von', 'Winklestein', 'Robert2@warwick.com', '83548787')
    assign_project_team_member_to_project(4, 1000, 'Winkling') # now I know that this works, that's nice
    add_project_team_member_specified_id(12340, 'Jankos', 'Stefan', 'Jankos@warwick.com', '123456789', 1, 'Front End Developer')
    add_project_team_member_specified_id(12341, 'Gosu', 'Marcin', 'Gosu@warwick.com', '23424324427831', 1, 'Back End Developer')
    add_project_team_member_specified_id(12342, 'G2', 'Adam', 'G2Adam@warwick.com', '3424232432', 1, 'Backend Developer')
    add_project_team_member_specified_id(12343, 'G2', 'Charis', 'G2Charis@warwick.com', '898992234', 1, 'Front End Developer')
    add_project_team_member_specified_id(12344, 'Robert', 'Winkle', 'Robert@warwick.com', '22192812', 1, 'Speech Recognition Engineer')

    add_project_team_member_specified_id(12345, 'Gerald', 'Ramos', 'qwert@warwick.com', '123456789', 0, 'Front End Developer')
    add_project_team_member_specified_id(12346, 'John', 'Doe', 'asd@warwick.co.uk', '234243244', 0, 'Back End Developer')
    add_project_team_member_specified_id(12347, 'Jeff', 'Bezos', 'jeff@warwick.co.uk', '3424223424', 0, 'Backend Developer')
    add_project_team_member_specified_id(12348, 'Rob', 'Man', 'Rob@warwick.co.uk', '898992189', 0, 'Front End Developer')
    add_project_team_member_specified_id(12349, 'Ben', 'Dover', 'Ben@warwick.co.uk','897897894', 0, 'ML Engineer')

    add_project_team_member_specified_id(34564, 'John', 'Cena', 'YouCantSeeMe@warwick.com', '26363636', 2, 'Emotional Support')
    add_project_team_member_specified_id(34565, 'Riven', 'Rickett', 'Gaming@warwick.com', '3463265785', 2, 'Moral Support')
    add_project_team_member_specified_id(34566, 'Johnathan', 'Frakes', 'FrakeyFlakey@warwick.co.uk', '3453563636', 2, 'Toast Engineer')
    add_project_team_member_specified_id(34567, 'Elon', 'Fuss', 'Tesla@warwick.co.uk', '32424252632', 2, 'Mathematician')
    add_project_team_member_specified_id(34568, 'Wing', 'Chun', 'Wing@warwick.co.uk', '23425245245', 2, 'Statistical Analyst')
    add_project_team_member_specified_id(34569, 'Ip', 'Man', 'ip@warwick.co.uk','23526235325', 2, 'C Programmer')
    add_project_team_member_specified_id(34570, 'Tim', 'Bowler', 'Tim@warwick.co.uk','69420', 2, 'C++ Programmer')

    add_project_team_member_specified_id(34571, 'Darius', 'Darius', 'Darius@warwick.com', '3289749324', 1000, 'Frontend Developer')
    add_project_team_member_specified_id(34572, 'Garen', 'Garen', 'Garen@warwick.com', '3289749522', 1000, 'Backend Developer')
    add_project_team_member_specified_id(34573, 'Riven', 'Riven', 'Riven@warwick.com', '3289749323', 1000, 'Backend Developer')
    add_project_team_member_specified_id(34574, 'Yasuo', 'Yasuo', 'Yasuo@warwick.com', '3289743322', 1000, 'Backend Developer')
    add_project_team_member_specified_id(34575, 'Sylas', 'Sylas', 'Sylas@warwick.com', '3427832478', 1000, 'Frontend Developer')

    print("Inserting requirements...")
    # project 0
    add_project_requirement_specified_id(55555, 0, 'Learn how to program in C', 'HIGH', 1, 10000)
    add_project_requirement_specified_id(55556, 0, 'Learn how to edit files in C', 'MEDIUM', 0, 2000)
    add_project_requirement_specified_id(55557, 0, 'Learn how to output files in C', 'LOW', 1, 500)
    # project 1
    add_project_requirement_specified_id(44447, 1, 'Figure out what a vector is', 'HIGH', 1, 10)
    add_project_requirement_specified_id(44448, 1, 'Figure out what a pointer is', 'MEDIUM', 0, 100)
    add_project_requirement_specified_id(44449, 1, 'Figure out how to pass by reference using functions', 'LOW', 1, 1000)
    # project 2
    add_project_requirement_specified_id(77775, 2, 'Solve P', 'LOW', 0, 50)
    add_project_requirement_specified_id(77776, 2, 'Solve NP', 'LOW', 0, 50)
    add_project_requirement_specified_id(77777, 2, 'Figure out why PP hard', 'HIGH', 1, 500000)
    # project 1000
    add_project_requirement(1000, 'Learn what Java is', 'LOW', 1, 100)
    add_project_requirement(1000, 'Learn what a java class is', 'MEDIUM', 1, 1000)
    add_project_requirement(1000, 'Implement the A* search algorithm', 'HIGH', 1, 10000)

    print("Inserting project tasks...")
    
    #project 0
    add_project_task_specified_id(77771, 55555, 'Implement file access ability', '2023-04-12', 'I create a text file and I access a text file!')
    add_project_task_specified_id(77770, 55555, 'Ask Matt what the main function does', '2023-03-16', 'Email Matt for help')
    add_project_task_specified_id(77772, 55555, 'Edit text file', '2023-04-22', 'I create a text file and I edit a text file!')
    add_project_task_specified_id(77773, 55556, 'Create Test Method', '2023-05-05', 'Create a method that allows students to create their own tests')
    add_project_task_specified_id(77774, 55556, 'What Test Methods?', '2023-06-07', 'Determine what tests are needed to fulfill the requirement')
    add_project_task_specified_id(77775, 55556, 'Create Auto Tester', '2023-06-10', 'Given a series of tests, create a method that allows the student to run their code on multiple tests at once')
    add_project_task_specified_id(77776, 55557, 'Figure out safe file handling implementations in C', '2023-07-21', 'Figure out how to handle files in C without causing memory leaks')
    add_project_task_specified_id(77777, 55557, 'Output File', '2023-08-11', 'Output a file that contains the results of the tests')
    add_project_task_specified_id(77778, 55557, 'Read file', '2023-09-21', 'Read a file that contains the results of the tests')
    #project 1
    add_project_task_specified_id(66665, 44447, 'Google what a SSE vector is', '2023-03-22', 'Google what a SSE vector is (on google of course)')
    add_project_task_specified_id(66666, 44447, 'Write a research paper on what a SSE vector is', '2023-04-08', 'Write a research paper on what a SSE vector is I think')
    add_project_task_specified_id(66667, 44447, 'Edit my vector paper', '2023-07-09', 'Edit my paper on what a SSE vector is and proofread it')
    add_project_task(44448, 'Google what a pointer is', '2024-02-07', 'Google what a pointer is (on google of course)') # testing this method
    add_project_task(44448, 'Write a research paper on what a pointer is', '2024-03-08', 'Write a research paper on what a pointer is I think')
    add_project_task(44448, 'Edit my pointer paper', '2024-04-09', 'Edit my paper on what a pointer is and proofread it')
    add_project_task(44449, 'Google what passing by reference is', '2024-06-11', 'Google what passing by reference is (on google of course)')
    add_project_task(44449, 'Write a research paper on what passing by reference is', '2024-07-12', 'Write a research paper on what passing by reference is I think')
    add_project_task(44449, 'Edit my passing by reference paper', '2024-09-29', 'Edit my paper on what passing by reference is and proofread it')
    #project 2
    add_project_task_specified_id(55555, 77775, 'Create P Solver', '2023-04-01', 'Create a method that allows us to solve P')
    add_project_task_specified_id(55556, 77776, 'Create NP Solver', '2023-05-15', 'Create a method that allows us to solve NP')
    add_project_task_specified_id(55557, 77777, 'Create PP Solver', '2023-09-07', 'Create a method that allows us to solve PP')
    #project 1000
    add_project_task(77778, 'Google what Java is', '2023-10-04', 'It is most likely an object oriented programming language')
    add_project_task(77778, 'Try writing my own Java code', '2024-11-05', 'Get the code to compile and run')
    add_project_task(77779, 'Google what a Java class is', '2024-04-09', 'It is most likely a class that is used in Java')
    add_project_task(77779, 'Try writing my own classes', '2025-02-07', 'Get the classes to interact with each other')
    add_project_task(77780, 'Research A* and implement it', '2026-01-01', 'Research A* and implement it in the Java maze solver')
    add_project_task(77780, 'Optimise A* alogorithm', '2026-05-01', 'Optimise A* algorithm to run faster')

    print("Inserting employee tasks...")

    #project 1000
    add_employee_task(34571, 77785)
    update_task_finished(77785, 34571)
    add_employee_task(34571, 77786)
    update_task_finished(77786, 34571)
    add_employee_task(34571, 77787)
    update_task_finished(77787, 34571)
    add_employee_task(34571, 77788)
    update_task_finished(77788, 34571)
    add_employee_task(34571, 77789)
    update_task_finished(77789, 34571)
    add_employee_task(34571, 77790)
    update_task_finished(77790, 34571)

    #project 1
    add_employee_task(12340, 66665)
    update_task_finished(66665, 12340)
    add_employee_task(12340, 66666)
    update_task_finished(66666, 12340)
    add_employee_task(12340, 66667)
    update_task_finished(66667, 12340)
    add_employee_task(12344, 66665)
    update_task_finished(66665, 12344)
    add_employee_task(12344, 66666)
    update_task_finished(66666, 12344)
    add_employee_task(12344, 66667)
    update_task_finished(66667, 12344)
    add_employee_task(12344, 66668)
    add_employee_task(34564, 66666)
    update_task_finished(66666, 34564)
    add_employee_task(4, 77779)
    update_task_finished(77779, 4)
    add_employee_task(12341, 77779)
    update_task_finished(77779, 12341)
    add_employee_task(12341, 77780)
    update_task_finished(77779, 12341)
    add_employee_task(4, 77780)
    update_task_finished(77780, 4)
    add_employee_task(4, 77781)
    add_employee_task(12341, 77781)
    update_task_finished(77781, 12341)
    add_employee_task(12342, 77782)
    add_employee_task(12342, 77783)
    add_employee_task(12342, 77784)
    update_task_finished(77782, 12342)
    add_employee_task(12343, 77782)
    add_employee_task(12343, 77783)

    #project 0
    add_employee_task(12345, 77770)
    update_task_finished(77770, 12345)
    add_employee_task(12345, 77771)
    update_task_finished(77771, 12345)
    add_employee_task(12345, 77772)
    update_task_finished(77772, 12345)
    add_employee_task(12346, 77773)
    update_task_finished(77773, 12346)
    add_employee_task(12346, 77774)
    update_task_finished(77774, 12346)
    add_employee_task(12346, 77775)
    update_task_finished(77775, 12346)
    add_employee_task(12347, 77776)
    update_task_finished(77776, 12347)
    add_employee_task(12347, 77777)
    update_task_finished(77777, 12347)
    add_employee_task(12347, 77778) # finish all tasks
    update_task_finished(77778, 12347)

    #project 2
    add_employee_task(34564, 55555)
    add_employee_task(34565, 55555)
    add_employee_task(34565, 55556)
    update_task_finished(55556, 34565)
    add_employee_task(34565, 55557)
    add_employee_task(34566, 55555)
    add_employee_task(34566, 55556)
    add_employee_task(34566, 55557)
    add_employee_task(34567, 55555)
    add_employee_task(34567, 55556)
    add_employee_task(34567, 55557)
    add_employee_task(34568, 55555)
    update_task_finished(55555, 34568)
    add_employee_task(34568, 55556)
    add_employee_task(34568, 55557)
    add_employee_task(34569, 55555)
    add_employee_task(34569, 55556)
    add_employee_task(34569, 55557)

    print("Inserting skills...") # skills, we can add more if we want, but this is probably enough

    add_skill_specified_id(0, 'Python', 'Python is a programming language that lets you work quickly and integrate systems more effectively.')
    add_skill_specified_id(1, 'Java', 'Java is a general-purpose computer-programming language that is concurrent, class-based, object-oriented, and specifically designed to have as few implementation dependencies as possible.')
    add_skill_specified_id(2, 'C++', 'C++ is a general-purpose programming language created by Bjarne Stroustrup as an extension of the C programming language, or "C with Classes".')
    add_skill_specified_id(3, 'C', 'C is a general-purpose, procedural computer programming language supporting structured programming, lexical variable scope, and recursion, with a static type system.')
    add_skill_specified_id(4, 'C#', 'C# is a general-purpose, multi-paradigm programming language encompassing strong typing, lexically scoped, imperative, declarative, functional, generic, object-oriented (class-based), and component-oriented programming disciplines.')
    add_skill_specified_id(5, 'JavaScript', 'JavaScript, often abbreviated as JS, is a programming language that conforms to the ECMAScript specification.')
    add_skill_specified_id(6, 'PHP', 'PHP is a server-side scripting language designed for web development but also used as a general-purpose programming language.')
    add_skill_specified_id(7, 'HTML', 'HTML is the standard markup language for documents designed to be displayed in a web browser.')
    add_skill_specified_id(8, 'CSS', 'Cascading Style Sheets is a style sheet language used for describing the presentation of a document written in a markup language such as HTML.')
    add_skill_specified_id(9, 'SQL', 'SQL is a domain-specific language used in programming and designed for managing data held in a relational database management system (RDBMS), or for stream processing in a relational data stream management system (RDSMS).')
    add_skill_specified_id(10, 'Swift', 'Swift is a general-purpose, multi-paradigm, compiled programming language developed by Apple Inc. for iOS, iPadOS, macOS, watchOS, tvOS, Linux, and z/OS.')
    add_skill_specified_id(11, 'Video Production', 'General Purpose video, recording, and editing skills.')

    print("Inserting employee skills...")

    add_employee_skill(12345, 0, 0)
    add_employee_skill(12345, 1, 1)
    add_employee_skill(12345, 2, 0)
    add_employee_skill(12345, 3, 1)
    add_employee_skill(12346, 0, 0)
    add_employee_skill(12346, 1, 0)
    add_employee_skill(12346, 2, 0)
    add_employee_skill(12346, 3, 1)
    add_employee_skill(12347, 7, 0)
    add_employee_skill(12347, 8, 1)
    add_employee_skill(12348, 3, 0)
    add_employee_skill(12348, 7, 0)
    add_employee_skill(12348, 10, 1)
    add_employee_skill(12349, 0, 0)
    add_employee_skill(12349, 3, 0)
    add_employee_skill(12349, 4, 1)
    add_employee_skill(12344, 10, 1)
    add_employee_skill(34564, 0, 0)
    add_employee_skill(34564, 1, 1)
    add_employee_skill(34565, 0, 0)
    add_employee_skill(34565, 1, 1)
    add_employee_skill(34566, 5, 0)
    add_employee_skill(34566, 6, 1)
    add_employee_skill(34567, 5, 0)
    add_employee_skill(34567, 6, 1)
    add_employee_skill(34568, 9, 0)
    add_employee_skill(34568, 7, 1)
    add_employee_skill(34569, 5, 0)
    add_employee_skill(34569, 9, 1)
    add_employee_skill(4, 0, 0)
    add_employee_skill(4, 1, 0)
    add_employee_skill(4, 2, 0)
    add_employee_skill(4, 3, 0)
    add_employee_skill(4, 4, 0)
    add_employee_skill(4, 5, 0)
    add_employee_skill(4, 6, 0)
    add_employee_skill(4, 7, 0)
    add_employee_skill(4, 8, 0)
    add_employee_skill(4, 9, 0)
    add_employee_skill(4, 10, 1)
    add_employee_skill(4, 11, 0)

    print("Inserting skill requirements...")

    add_skill_requirements(0, 55555)
    add_skill_requirements(9, 55555)
    add_skill_requirements(0, 55556)
    add_skill_requirements(2, 55557)
    add_skill_requirements(10, 44447)
    add_skill_requirements(11, 44447)
    add_skill_requirements(0, 77775)
    add_skill_requirements(0, 77776)
    add_skill_requirements(0, 77777)
    add_skill_requirements(2, 77777)
    add_skill_requirements(3, 77777)
    add_skill_requirements(0, 77778)
    add_skill_requirements(0, 77779)
    add_skill_requirements(1, 77779)
    add_skill_requirements(1, 77780)
    add_skill_requirements(2, 77780)
    add_skill_requirements(2, 77780)

    print("Inserting member requests...")

    add_member_request(2, 34565, 'We need more budget', '2023-11-02', 0)
    add_member_request(2, 34564, 'There bugs in DCS', '2023-11-20', 0)
    add_member_request(2, 34569, 'I am hungry, need food', '2023-11-29', 0)   # Most optimal tesco meal deal by caloric value is the triple chicken select, fridge raiders and a full sugar red bull
    add_member_request(1, 12344, 'Stop Saying Somehow', '2023-05-20', 0)  
    add_member_request(0, 12345, 'We need £300 more budget', '2020-01-17', 0)
    add_member_request(0, 12347, 'We need more team members', '2020-03-01', 0)
    add_member_request(0, 4, 'We need more budget', '2022-12-19', 1)

    print("Values inserted successfully")


if __name__ == '__main__':
    insert_test_data()

